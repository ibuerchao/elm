<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.buerc.permission.mapper.SysOperLogMapper">
  <resultMap id="BaseResultMap" type="com.buerc.permission.model.SysOperLog">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="target_id" jdbcType="VARCHAR" property="targetId" />
    <result column="operate_id" jdbcType="VARCHAR" property="operateId" />
    <result column="operate_name" jdbcType="VARCHAR" property="operateName" />
    <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime" />
    <result column="operate_ip" jdbcType="VARCHAR" property="operateIp" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.buerc.permission.model.SysOperLog">
    <result column="old_value" jdbcType="LONGVARCHAR" property="oldValue" />
    <result column="new_value" jdbcType="LONGVARCHAR" property="newValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, target_id, operate_id, operate_name, operate_time, operate_ip, status
  </sql>
  <sql id="Blob_Column_List">
    old_value, new_value
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.buerc.permission.model.SysOperLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_oper_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.buerc.permission.model.SysOperLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_oper_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offset != null and offset>=0">
      limit #{offset} , #{limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_oper_log
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_oper_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.buerc.permission.model.SysOperLogExample">
    delete from sys_oper_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.buerc.permission.model.SysOperLog">
    insert into sys_oper_log (id, type, target_id, 
      operate_id, operate_name, operate_time, 
      operate_ip, status, old_value, 
      new_value)
    values (#{id,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{targetId,jdbcType=VARCHAR}, 
      #{operateId,jdbcType=VARCHAR}, #{operateName,jdbcType=VARCHAR}, #{operateTime,jdbcType=TIMESTAMP}, 
      #{operateIp,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{oldValue,jdbcType=LONGVARCHAR}, 
      #{newValue,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.buerc.permission.model.SysOperLog">
    insert into sys_oper_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="targetId != null">
        target_id,
      </if>
      <if test="operateId != null">
        operate_id,
      </if>
      <if test="operateName != null">
        operate_name,
      </if>
      <if test="operateTime != null">
        operate_time,
      </if>
      <if test="operateIp != null">
        operate_ip,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="oldValue != null">
        old_value,
      </if>
      <if test="newValue != null">
        new_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="targetId != null">
        #{targetId,jdbcType=VARCHAR},
      </if>
      <if test="operateId != null">
        #{operateId,jdbcType=VARCHAR},
      </if>
      <if test="operateName != null">
        #{operateName,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateIp != null">
        #{operateIp,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="oldValue != null">
        #{oldValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="newValue != null">
        #{newValue,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.buerc.permission.model.SysOperLogExample" resultType="java.lang.Long">
    select count(*) from sys_oper_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_oper_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.targetId != null">
        target_id = #{record.targetId,jdbcType=VARCHAR},
      </if>
      <if test="record.operateId != null">
        operate_id = #{record.operateId,jdbcType=VARCHAR},
      </if>
      <if test="record.operateName != null">
        operate_name = #{record.operateName,jdbcType=VARCHAR},
      </if>
      <if test="record.operateTime != null">
        operate_time = #{record.operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operateIp != null">
        operate_ip = #{record.operateIp,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.oldValue != null">
        old_value = #{record.oldValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.newValue != null">
        new_value = #{record.newValue,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update sys_oper_log
    set id = #{record.id,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      target_id = #{record.targetId,jdbcType=VARCHAR},
      operate_id = #{record.operateId,jdbcType=VARCHAR},
      operate_name = #{record.operateName,jdbcType=VARCHAR},
      operate_time = #{record.operateTime,jdbcType=TIMESTAMP},
      operate_ip = #{record.operateIp,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      old_value = #{record.oldValue,jdbcType=LONGVARCHAR},
      new_value = #{record.newValue,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_oper_log
    set id = #{record.id,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      target_id = #{record.targetId,jdbcType=VARCHAR},
      operate_id = #{record.operateId,jdbcType=VARCHAR},
      operate_name = #{record.operateName,jdbcType=VARCHAR},
      operate_time = #{record.operateTime,jdbcType=TIMESTAMP},
      operate_ip = #{record.operateIp,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.buerc.permission.model.SysOperLog">
    update sys_oper_log
    <set>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="targetId != null">
        target_id = #{targetId,jdbcType=VARCHAR},
      </if>
      <if test="operateId != null">
        operate_id = #{operateId,jdbcType=VARCHAR},
      </if>
      <if test="operateName != null">
        operate_name = #{operateName,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateIp != null">
        operate_ip = #{operateIp,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="oldValue != null">
        old_value = #{oldValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="newValue != null">
        new_value = #{newValue,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.buerc.permission.model.SysOperLog">
    update sys_oper_log
    set type = #{type,jdbcType=TINYINT},
      target_id = #{targetId,jdbcType=VARCHAR},
      operate_id = #{operateId,jdbcType=VARCHAR},
      operate_name = #{operateName,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      operate_ip = #{operateIp,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      old_value = #{oldValue,jdbcType=LONGVARCHAR},
      new_value = #{newValue,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.buerc.permission.model.SysOperLog">
    update sys_oper_log
    set type = #{type,jdbcType=TINYINT},
      target_id = #{targetId,jdbcType=VARCHAR},
      operate_id = #{operateId,jdbcType=VARCHAR},
      operate_name = #{operateName,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      operate_ip = #{operateIp,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>